app:
  title: Gerdau Backstage App
  baseUrl: http://backstage-dev.gerdau.digital:3000

organization:
  name: Gerdau

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/auth/service-to-service-auth for
  # information on the format
  # auth:
  #   keys:
  #     - secret: ${BACKEND_SECRET}
  baseUrl: http://backstage-dev.gerdau.digital:8080
  listen:
    port: 8080
    # Uncomment the following host directive to bind to specific interfaces
    # host: 127.0.0.1
  csp:
    connect-src: ["'self'", "http:", "https:"]
    upgrade-insecure-requests: false
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://backstage-dev.gerdau.digital:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  # This is for local development only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml
  database:
    client: pg
    connection:
      host: postgres
      port: 5432
      user: postgres
      password: example

integrations:
  github:
    - host: github.com
      token: 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
  gitlab:
    - host: gitlab.com
      token: sSx-8nsVDfsqGR447f5J

proxy:
  ### Example for how to add a proxy endpoint for the frontend.
  ### A typical reason to do this is to handle HTTPS and CORS for internal services.
  # endpoints:
  #   '/test':
  #     target: 'https://example.com'
  #     changeOrigin: true

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: "local" # Alternatives - 'external'
  generator:
    runIn: "local" # Alternatives - 'local'
  publisher:
    type: "local" # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

auth:
  # see https://backstage.io/docs/auth/ to learn about auth providers
  providers:
    microsoft:
      development:
        clientId: "37ae1263-2c39-4b6e-9278-f2c873f14a00"
        clientSecret: ".Vc8Q~Q3kGF63x4k2izueJm2P.IIbiuDnF_CecKM"
        tenantId: "461fd7ef-0eb3-4420-b044-310dc2914d64"
        authorizationUrl: "https://login.microsoftonline.com/461fd7ef-0eb3-4420-b044-310dc2914d64/oauth2/v2.0/authorize"
        tokenUrl: "https://login.microsoftonline.com/461fd7ef-0eb3-4420-b044-310dc2914d64/oauth2/v2.0/token"
    github:
      development:
        clientId: Ov23liNYSbMjrHaJjBjl
        clientSecret: 3c8c329914e6d98ff7837ba2faabbea874974534
    gitlab:
      development:
        clientId: feeeab9cf436b7951e334a56c5674d9c963a1f376597c8801f6f0e9aefe1eb60
        clientSecret: b73d38f860fdc0cf99205ba4c315e6801d51431cc191f4192200eda871055bf2

scaffolder:
  # see https://backstage.io/docs/features/software-templates/configuration for software template options

catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location]
  locations:
    # Local example data, file locations are relative to the backend process, typically `packages/backend`
    - type: file
      target: ../../examples/entities.yaml

    # Local example template
    - type: file
      target: ../../examples/template/template.yaml
      rules:
        - allow: [Template]

    # Local example organizational data
    - type: file
      target: ../../examples/org.yaml
      rules:
        - allow: [User, Group]

    # Local example catalog-info.yaml
    - type: file
      target: ../../catalog-info.yaml
      rules:
        - allow: [Component]

    ## Uncomment these lines to add more example data
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all.yaml

    ## Uncomment these lines to add an example org
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme-corp.yaml
    #   rules:
    #     - allow: [User, Group]

costInsights:
  engineerCost: 200000
  products:
    productA:
      name: Some Cloud Product ## required
      icon: storage
    productB:
      name: Some Other Cloud Product
      icon: data
